mean.bayes = colMeans(samp.theta)
sigma.bayes = apply(samp.theta, 2, var)
-2*(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-
(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-1/grid.size*sum(log(dnorm(dat$y, samp.theta, sigma.bayes)))))
-2*(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-
(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma)))))
sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))
dnorm(dat$y, mean.bayes, dat$sigma)
samp.theta
apply(log(samp.theta), 1, sum)
apply(log(samp.theta), 2, sum)
apply(samp.theta, 2, sum)
rnorm(samp.theta, dat$sigma)
dim(samp.theta)
head(samp.theta)
j=1
dnorm(dat$y[j], samp.theta[, j], dat$sigma[j])
sum(log(dnorm(dat$y[j], samp.theta[, j], dat$sigma[j])))
sum(log(dnorm(dat$y[j], samp.theta[, j], dat$sigma[j])))/grid.size
sum(log(dnorm(dat$y, samp.theta, dat$sigma)))/grid.size
log(dnorm(dat$y, samp.theta, dat$sigma))
var*log(dnorm(dat$y, samp.theta, dat$sigma)))
var(log(dnorm(dat$y, samp.theta, dat$sigma)))
var(sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
var(log(dnorm(dat$y, samp.theta, dat$sigma)))
var(log(dnorm(dat$y, bayes.mean, dat$sigma)))
var(log(dnorm(dat$y, mean.bayes, dat$sigma)))
var(log(dnorm(dat$y, dat$y, dat$sigma)))
var(log(dnorm(dat$y, samp.theta, dat$sigma)))
mean(var(log(dnorm(dat$y, samp.theta, dat$sigma))))
hist(theta)
hist(samp.theta)
hist(samp.theta)
var(samp.theta)
sapply(1:grid.size, function(x) V(samp.tau[x],j))^0.5)
sapply(1:grid.size, function(x) V(samp.tau[x],j)^0.5)
sqrt(14.7)
sqrt(14.7)/2
j=2
sapply(1:grid.size, function(x) V(samp.tau[x],j)^0.5)
dat$sigma
bayes.sigma
sigma.bayes
sqrt(sigma.bayes)
log(dat$y, dat$y, dat$sigma)
log(dnorm(dat$y, dat$y, dat$sigma))
var(log(dnorm(dat$y, dat$y, dat$sigma)))
var(log(dnorm(dat$y, mean(mean.bayes), dat$sigma)))
var(log(dnorm(dat$y, mean(mean.bayes), dat$sigma)))*2
var(log(dnorm(dat$y, mean(mean.bayes), dat$sigma)))*2*2
(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))*2
var(y.rep)
y.rep
log(dnorm(dat$y, y.rep, dat$sigma))
var(log(dnorm(dat$y, y.rep, dat$sigma)))
var(colSums(log(dnorm(dat$y, y.rep, dat$sigma)))
)
sqrt(var(colSums(log(dnorm(dat$y, y.rep, dat$sigma)))))
log(dnorm(dat$y, samp.theta, dat$sigma)
)
var(log(dnorm(dat$y, samp.theta, dat$sigma)))
var(var(log(dnorm(dat$y, samp.theta, dat$sigma))))
var(log(dnorm(dat$y, samp.theta, dat$sigma)))
log(dnorm(dat$y, mean.bayes, dat$sigma)
)
var(log(dnorm(dat$y, mean.bayes, dat$sigma)))
var(log(dnorm(dat$y, mean.bayes, dat$sigma)))*@
var(log(dnorm(dat$y, mean.bayes, dat$sigma)))*2
var(log(dnorm(dat$y, mean.bayes, dat$sigma^2)))*2
var(log(dnorm(dat$y, mean.bayes, dat$sigma^2)))*2*2
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/grid.size*sum(dnorm(dat$y, samp.theta, dat$sigma)))
}
to.sum
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/grid.size*sum(dnorm(dat$y, samp.theta[,i], dat$sigma)))
}
to.sum
sum(to.sum)
sum(to.sum)*-2
neg2.llpd = sum(to.sum)*-2
sum(log(dnorm(dat$y, mean.bayes, dat$sigma)
)
)
pWAIC1 = 2*(sum(to.sum) - sum(log(dnorm(dat$y, mean.bayes, dat$sigma))))
pWAIC1
sum(to.sum)
sum(log(dnorm(dat$y, mean.bayes, dat$sigma))
))
)
sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))
1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma)))
2*(sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC2 = sum(diag(var(log(dnorm(dat$y, mean.bayes, dat$sigma)))))
pWAIC2
diag(var(log(dnorm(dat$y, mean.bayes, dat$sigma))))
var(log(dnorm(dat$y, mean.bayes, dat$sigma)))
var(log(dnorm(dat$y, samp.bayes, dat$sigma)))
var(log(dnorm(dat$y, samp.theta, dat$sigma)))
diag(var(log(dnorm(dat$y, samp.theta, dat$sigma))))
sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
2*(sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
WAIC = neg2.llpd - pWAIC1
WAIC
WAIC = neg2.llpd - pWAIC2
WAIC
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/grid.size*sum(dnorm(dat$y, samp.theta.sep[,i], dat$sigma)))
}
neg2.llpd = sum(to.sum)*-2
neg2.llpd
sum(to.sum)
dim(samp.theta.sep)
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/100000*sum(dnorm(dat$y, samp.theta.sep[,i], dat$sigma)))
}
neg2.llpd = sum(to.sum)*-2
neg2.llpd
sum(to.sum)
59.3+1.3
59.3+2*(1.3)
59.2+2*(1.3)
59.2+2*(1)
60.2+5
DIC
-2*(sum(log(dnorm(dat$y, colMeans(samp.theta.sep), dat$sigma)))-8)
sum(to.sum)*-2
dim(samp.theta.sep)
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/10000000*sum(dnorm(dat$y, samp.theta.sep[,i], dat$sigma)))
}
neg2.llpd = sum(to.sum)*-2
neg2.llpd
pWAIC1 = 2*(sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC1
pWAIC1.sep = 1/10000000*sum(log(dnorm(dat$y, samp.theta.sep[,i], dat$sigma)))
pWAIC1.sep
WAIC.sep = neg2.llpd - pWAIC1.sep
WAIC.sep
WAIC.sep = neg2.llpd - 2*pWAIC1.sep
WAIC.sep
WAIC.sep = neg2.llpd + 2*pWAIC1.sep
WAIC.sep
2*pWAIC1.sep
pWAIC1.sep = 1/10000000*sum(log(dnorm(dat$y, samp.theta.sep[,i], dat$sigma)))/2
WAIC.sep = neg2.llpd + pWAIC1.sep
WAIC.sep
WAIC.sep = neg2.llpd - pWAIC1.sep
WAIC.sep
60.2+5
60.2+8
60.2+5
neg2.llpd
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/10000000*sum(dnorm(dat$y, samp.theta.sep[,i], dat$sigma)))
}
neg2.llpd = sum(to.sum)*-2
neg2.llpd
pWAIC1.sep = 1/10000000*sum(log(dnorm(dat$y, samp.theta.sep[,i], dat$sigma)))/2
pWAIC1.sep
pWAIC1.sep = 1/10000000*sum(log(dnorm(dat$y, samp.theta.sep[,i], dat$sigma)))
pWAIC1.sep
nrow(samp.theta.sep)
to.sum2 = NULL
for (i in 1:nrow(dat)){
to.sum2[[i]] = log(dnorm(dat$y, samp.theta.sep[,i], dat$sigma))
}
pWAIC1.sep = 1/nrow(samp.theta.sep)*sum(to.sum2)
to.sum2
sum(to.sum2)
sum(to.sum)
class(to.sum)
class(to.sum2)
pWAIC1.sep = 1/nrow(samp.theta.sep)*sum(unlist(to.sum2))
pWAIC1.sep
pWAIC1.sep = 2*sum(to.sum)-1/nrow(samp.theta.sep)*sum(unlist(to.sum2))
pWAIC1.sep
pWAIC1.sep = 2*(sum(to.sum)-1/nrow(samp.theta.sep)*sum(unlist(to.sum2)))
pWAIC1.sep
pWAIC1.sep = (sum(to.sum)-1/nrow(samp.theta.sep)*sum(unlist(to.sum2))
)
pWAIC1.sep
sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
pWAIC2.sep = sum(diag(var(log(dnorm(dat$y, samp.theta.sep, dat$sigma)))))
pWAIC2.sep
DIC
WAIC
WAIC2
to.sum.loocv = NULL
for (i in 1:nrow(dat)){
to.sum.loocv[[i]] = 1/grid.size*dnorm(dat$y[-i], samp.theta[,-i], dat$sigma[-i])
}
to.sum.loocv
llpd.loocv = sum(log(to.sum.loocv))
llpd.loocv = sum(log(unlist(to.sum.loocv)))
llpd.loocv
install.packages("loo")
require(loo)
loo(log(dnorm(dat$y, samp.theta.sep, dat$sigma)))
loo
waic
dat$y[-i]
samp.theta[,-i]
1/grid.size*dnorm(dat$y[-i], samp.theta[,-i], dat$sigma[-i])
to.sum.loocv[[i]] = 1/grid.size*sum(dnorm(dat$y[-i], samp.theta[,-i], dat$sigma[-i]))
to.sum.loocv = NULL
for (i in 1:nrow(dat)){
to.sum.loocv[[i]] = 1/grid.size*sum(dnorm(dat$y[-i], samp.theta[,-i], dat$sigma[-i]))
}
llpd.loocv = sum(log(unlist(to.sum.loocv)))
llpd.loocv
llpd.loocv = -2*sum(log(unlist(to.sum.loocv)))
llpd.loocv
llpd.loocv*2
to.sum.loocv = NULL
for (i in 1:nrow(dat)){
to.sum.loocv[[i]] = 1/grid.size*sum(dnorm(dat$y[-i], samp.theta[,-i], dat$sigma[-i]))
}
llpd.loocv = -2*sum(log(unlist(to.sum.loocv)))
llpd.loocv
ploocv = neg2.llpd/-2 - llpd.loocv
neg2.llpd/-2
ploocv = neg2.llpd/-2 - llpd.loocv
ploocv
llpd.loocv
ploocv = neg2.llpd/-2 - llpd.loocv/-2
ploocv
llpd.loocv/-2
log(unlist(to.sum.loocv))
to.sum.loocv
samp.theta[,-i]
head(samp.theta[,-i])
dat$sigma[-i]
grid.size
dim(samp.theta)
AI
AIC
#for heirarchical
mean.bayes = colMeans(samp.theta)
sigma.bayes = apply(samp.theta, 2, var)
#postior distripution
#AIC
AIC = "--"
#DIC
DIC = -2*(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-
(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma)))))
DICalt = -2*(sum(log(dnorm(dat$y, colMeans(samp.theta), dat$sigma)))-
(sum(log(dnorm(dat$y, colMeans(samp.theta), dat$sigma)))-sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))))
#WAIC
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/grid.size*sum(dnorm(dat$y, samp.theta[,i], dat$sigma)))
}
neg2.llpd = sum(to.sum)*-2
pWAIC1 = 2*(sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC2 = sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
WAIC = neg2.llpd - pWAIC1
WAIC2 = neg2.llpd - pWAIC2
#LOOCV
to.sum.loocv = NULL
for (i in 1:nrow(dat)){
to.sum.loocv[[i]] = 1/grid.size*sum(dnorm(dat$y[-i], samp.theta[,-i], dat$sigma[-i]))
}
llpd.loocv = -2*sum(log(unlist(to.sum.loocv)))
ploocv = neg2.llpd/-2 - llpd.loocv/-2
#for tau=infinity
AIC.sep = -2*(sum(log(dnorm(dat$y, dat$y, dat$sigma)))-8)
DIC.sep = -2*(sum(log(dnorm(dat$y, colMeans(samp.theta.sep), dat$sigma)))-8)
DICalt.sep = -2*(sum(log(dnorm(dat$y, colMeans(samp.theta.sep), dat$sigma)))-8)
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/nrow(samp.theta.sep)*sum(dnorm(dat$y, samp.theta.sep[,i], dat$sigma)))
}
neg2.llpd = sum(to.sum)*-2
to.sum2 = NULL
for (i in 1:nrow(dat)){
to.sum2[[i]] = log(dnorm(dat$y, samp.theta.sep[,i], dat$sigma))
}
pWAIC1.sep = (sum(to.sum)-1/nrow(samp.theta.sep)*sum(unlist(to.sum2)))
pWAIC2.sep = 8
WAIC1.sep = neg2.llpd - pWAIC1.sep
WAIC2.sep = neg2.llpd - 8
AIC
AIC.sep
DIC
DIC.sep
pDIC
1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma)))))
1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma)))
(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pDIC = (sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pDIC
pDIC.alt = (sum(log(dnorm(dat$y, colMeans(samp.theta), dat$sigma)))-sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))))
pDIC.alt = (sum(log(dnorm(dat$y, colMeans(samp.theta), dat$sigma)))-sum(log(dnorm(dat$y, mean.bayes, dat$sigma))))
pDIC.alt
sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
pDIC.alt = sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
DIC = -2*(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-
pDIC)
DICalt = -2*(sum(log(dnorm(dat$y, colMeans(samp.theta), dat$sigma)))-
pDIC.alt)
DIC
DICalt
pDIC.alt
DIC.sep
DIC
pDIC.alt
pDIC
WAIC
WAIC2
pWAIC1
pWAIC2
pWAIC.sep
pWAIC1.sep
pWAIC2.sep
WAIC
pDIC
dat$y
best.prob.sep[1]
sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
pWAIC2 = sum(diag(var(log(dnorm(dat$y, mean.bayes, dat$sigma)))))
pWAIC2
var(log(dnorm(dat$y, mean.bayes, dat$sigma)
)
)
pWAIC2 = sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
pWAIC1
pWAIC2
pWAIC1 = (sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC1
2*
pWAIC1 = 2*(sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC1 = 2*(sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC1
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/grid.size*sum(dnorm(dat$y, samp.theta[,i], dat$sigma)))
}
neg2.llpd = sum(to.sum)*-2
pWAIC1 = 2*(sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC1
pWAIC1 = (sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC1
pWAIC2 = sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
pWAIC2
pWAIC2/2
to.sum = NULL
for (i in 1:nrow(dat)){
var.sum[[i]] = diag(var(log(1/grid.size*sum(dnorm(dat$y, samp.theta[,i], dat$sigma)))))
}
var(log(1/grid.size*sum(dnorm(dat$y, samp.theta[,i], dat$sigma)
)
)
)
diag(var(log(dnorm(dat$y, samp.theta[,i], dat$sigma))))
var(log(dnorm(dat$y, samp.theta[,i], dat$sigma)))
var.sum = NULL
for (i in 1:nrow(dat)){
var.sum[[i]] = var(log(dnorm(dat$y, samp.theta[,i], dat$sigma)))
}
pWAIC2 = sum(var.sum)
pWAIC2
WAIC
pWAIC1.sep/2
pWAIC2.sep/2
pWAIC2
pWAIC1
pWAIC2/2
neg2.llpd
WAIC
WAIC = neg2.llpd + pWAIC1
WAIC
WAIC2 = neg2.llpd + pWAIC2
WAIC2
pWAIC2 = sum(var.sum)/2
WAIC2 = neg2.llpd + pWAIC2
WAIC2
WAIC1.sep
neg2.llpd
WAIC1.sep = neg2.llpd + pWAIC1.sep
WAIC1.sep
WAIC2.sep = neg2.llpd + 8
WAIC2.sep
llpd.loocv = -2*sum(log(to.sum.loocv))
llpd.loocv
ploocv
neg2.llpd/-2
llpd.loocv/-2
ploocv = neg2.llpd/-2 - llpd.loocv
ploocv
ploocv = neg2.llpd/-2 - llpd.loocv/2
ploocv
60.8-59.8
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/grid.size*sum(dnorm(dat$y, samp.theta[,i], dat$sigma)))
}
neg2.llpd = sum(to.sum)*-2
neg2.llpd
ploocv = neg2.llpd - llpd.loocv
ploocv
ploocv = neg2.llpd - llpd.loocv*2
ploocv
LOOCV = neg2.llpd + ploocv
LOOCV
require(twitteR)
require(twitteR)
getTwitterOAuth("Sh6NkExwT39Q0LuF3LwZqexwg", "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea")
require(twitteR)
setup_twitter_oauth("Sh6NkExwT39Q0LuF3LwZqexwg", "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea")
require(twitteR)
setup_twitter_oauth("Sh6NkExwT39Q0LuF3LwZqexwg", "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea")
setup_twitter_oauth(getOption("Sh6NkExwT39Q0LuF3LwZqexwg"),
getOption("6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea"))
require(twitteR)
setup_twitter_oauth(getOption("Sh6NkExwT39Q0LuF3LwZqexwg"),
getOption("6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea"),
getOption("1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR"),
getOption("Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW"))
setup_twitter_oauth(getOption("Sh6NkExwT39Q0LuF3LwZqexwg"),
getOption("6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea"),
getOption("1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR"),
getOption("Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW"))
require(twitteR)
setup_twitter_oauth(getOption("Sh6NkExwT39Q0LuF3LwZqexwg"),
getOption("6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea"),
getOption("1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR"),
getOption("Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW"))
setup_twitter_oauth("Sh6NkExwT39Q0LuF3LwZqexwg",
"6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
"1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
"Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
require(base64enc)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
require(base64enc)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
require(base64enc)
require(httr)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
$\xleftarrow{x_1\rightarrow x_2 \rightarrow x_3\hdots x_n}$
G'
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
''
this.dir <- dirname(parent.frame(2)$ofile)
setwd(this.dir)
setwd(getSrcDirectory()[1])
setwd(utils::getSrcDirectory()[1])
setwd(getSrcDirectory()[1])
setwd("~/Documents/phd/handbook")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
File <- "filename"
Files <- list.files(path=file.path("~"),recursive=T,include.dirs=T)
File <- "compile_book.R"
Files <- list.files(path=file.path("~"),recursive=T,include.dirs=T)
filename = "compile_book.R"
filepath = file.choose()  # browse and select your_file.R in the window
dir = substr(filepath, 1, nchar(filepath)-nchar(filename))
setwd(dir)
filename = "compile_book.R"
filepath = file.choose()  # browse and select your_file.R in the window
dir = substr(filepath, 1, nchar(filepath)-nchar(filename))
setwd(dir)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
filename = "compile_book.R"
filepath = file.choose()  # browse and select your_file.R in the window
dir = substr(filepath, 1, nchar(filepath)-nchar(filename))
setwd(dir)
bookdown::render_book("index.Rmd", "bookdown::gitbook")
dirname(rstudioapi::getActiveDocumentContext()$path)
dirname(rstudioapi::getActiveDocumentContext()$path)
filename = "compile_book.R"
filepath = file.choose()  # browse and select your_file.R in the window
dir = substr(filepath, 1, nchar(filepath)-nchar(filename))
setwd(dir)
source("compile_book.R",chdir=TRUE)
